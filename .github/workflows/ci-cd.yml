name: CI/CD

on:
  push:
    branches:
      - '*'
  release:
    types:
      - 'published'
  pull_request:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: install packages
        run: bun install

      - name: prettier
        run: bun run prettier

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: install packages
        run: bun install

      - name: eslint
        run: bun run lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: install packages
        run: bun install

      - name: build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-

      - name: build
        run: bun run build
        env:
          NEXT_PUBLIC_REMOTE_URL: ${{ github.event_name == 'release' && 'https://backend.easyflow.chat/' || 'https://dev-backend.easyflow.chat/'}}
          NEXT_PUBLIC_BASE_URL: ${{ github.event_name == 'release' && 'https://easyflow.chat' || 'https://dev.easyflow.chat'}}

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/.next
          name: easyflow-frontend-${{ github.sha }}
          if-no-files-found: error
          include-hidden-files: true

  docker:
    needs: [build, lint, format]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: install prod packages
        run: bun install --frozen-lockfile

      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/.next
          name: easyflow-frontend-${{ github.sha }}

      - name: remove cache
        run: rm -rf .next/cache

      - name: login to docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: create image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_NAMESPACE }}/${{ vars.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=dev,enable=${{ github.ref_name == 'main' }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            type=raw,value=${{ github.ref_name }},enable=${{ github.event_name == 'release' }}

      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          push: ${{ github.ref_name == 'main' || github.event_name == 'release'  }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || github.event_name == 'release'

    steps:
      - name: setup railway cli
        run: npm i -g @railway/cli

      - name: trigger redeploy on railway development
        if: github.ref_name == 'main'
        run: RAILWAY_TOKEN=${{ secrets.RAILWAY_DEV_TOKEN }} railway redeploy -s ${{ vars.RAILWAY_SERVICE_NAME }} -y

      - name: trigger redeploy on railway production
        if: github.event_name == 'release'
        run: RAILWAY_TOKEN=${{ secrets.RAILWAY_PROD_TOKEN }} railway redeploy -s ${{ vars.RAILWAY_SERVICE_NAME }} -y
